/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */


class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root==null){
            return new ArrayList();
        }
        List<List<Integer>> ll=new ArrayList<>();
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        boolean lr=true;
       
        while(!queue.isEmpty()){
            List<Integer> l=new ArrayList<>();
            int size= queue.size();
            
            for(int i=0;i<size;i++){
                TreeNode node= queue.remove();
                if(lr){
                    l.add(node.val);
                }else{
                    l.add(0,node.val);
                }
                if(node.left!=null) queue.add(node.left);
                if(node.right!=null) queue.add(node.right);
                
            }
            
            ll.add(l);
            lr=!lr;
            
            
            
            
        }
        
        return ll;
        
        
    }
}
