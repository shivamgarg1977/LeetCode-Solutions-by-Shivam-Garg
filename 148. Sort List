/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
      if(head==null || head.next==null){
          return head;
      } 
        ListNode slow=head,fast=head;
         ListNode prev = null;
        while(fast!=null && fast.next!=null){
            prev=slow;
            slow=slow.next;
            fast=fast.next.next;
        }
        prev.next=null;
        ListNode left=sortList(head);
        ListNode right=sortList(slow);
        
        return sortLinkedList(left,right);
    }
    public ListNode sortLinkedList(ListNode l1, ListNode l2){
        ListNode l=new ListNode(0);
        ListNode curr=l;
        
        while(l1!=null && l2!=null){
            if(l1.val<l2.val){
                    curr.next=l1;
                    l1=l1.next;
                    curr=curr.next;
                
            }else{
                    curr.next=l2;
                    l2=l2.next;
                    curr=curr.next;
            
            }
        }
    
    while(l1!=null){
        curr.next=l1;
        l1=l1.next;
        curr=curr.next;
    }
    while(l2!=null){
        curr.next=l2;
        l2=l2.next;
        curr=curr.next;
    }
    
    return l.next;
        
    }
}
