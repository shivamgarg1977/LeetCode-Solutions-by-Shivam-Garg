class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
      List<Integer> ans=new ArrayList<Integer>();
        int m=matrix.length;
        int n=matrix[0].length;
        int topRow=0;
        int bottomRow=m-1;
        int startCol=0;
        int endCol=n-1;



        while(topRow<=bottomRow && startCol<=endCol){
            //topRow Traversal
            for(int i=startCol;i<=endCol;i++){
                ans.add(matrix[topRow][i]);
            }
            
            //endCol Traversal
            for(int j=topRow+1;j<=bottomRow;j++){
                ans.add(matrix[j][endCol]);
            }
            
            //bottomRow Traversal
            for(int i=endCol-1;i>=startCol;i--){
                if(topRow==bottomRow){
                    break;
                }
                ans.add(matrix[bottomRow][i]);
            }
            
            //startCol Traversal
            for(int j=bottomRow-1;j>=topRow+1;j--){
                if(startCol==endCol){
                    break;
                }
                ans.add(matrix[j][startCol]);
            }
            
            topRow++;
            bottomRow--;
            startCol++;
            endCol--;
        }
        return ans;
    }
}
