class Solution {
    public int search(int[] nums, int target) {
        int rotate=0;
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]>nums[i+1]){
                rotate=i+1;
                break;
            }
        }
        if(rotate==0){
            return binarySearch(nums,0,nums.length-1,target);
        }

        if(target>=nums[0] && target<=nums[rotate-1]){
            return binarySearch(nums,0,rotate-1,target);
        }else{
            return binarySearch(nums,rotate,nums.length-1,target);
        }
    }
    public int binarySearch(int[] arr, int start, int end,int target){
        while(start<=end){
            int mid= start+ (end-start)/2;
            if(arr[mid]==target){
                return mid;
            }else if(arr[mid]>target){
                end=mid-1;
            }else{
                start=mid+1;
            }
        } 
        return -1;
    }
}
